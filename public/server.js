//__HEAD__
var Me=Object.create,R=Object.defineProperty,Oe=Object.getPrototypeOf,je=Object.prototype.hasOwnProperty,Fe=Object.getOwnPropertyNames,He=Object.getOwnPropertyDescriptor;var ke=r=>R(r,"__esModule",{value:!0});var Ae=(r,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of Fe(e))!je.call(r,s)&&s!=="default"&&R(r,s,{get:()=>e[s],enumerable:!(t=He(e,s))||t.enumerable});return r},d=r=>Ae(ke(R(r!=null?Me(Oe(r)):{},"default",r&&r.__esModule&&"default"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);function M(r){let e;return r&&((e=r.toIterable)?e.call(r):r)}var Ye=Symbol.for("#__initor__"),Ze=Symbol.for("#__inited__"),qe=Symbol.for("#__hooks__"),et=Symbol.for("#type"),tt=Symbol.for("#__listeners__");function E(r,e=null){let t={},s=/\$\$\d+\$\$/,n=function(i){return t[i]||(t[i]=e?e(i):{})},o=function(i,l){if(typeof l=="string"){if(l[0]=="$"&&s.test(l))return n(l)}else if(typeof i=="string"&&i[0]=="$"&&s.test(i)){let h=n(i);return Object.assign(h,l),h}return l};return JSON.parse(r,o)}function L(r,e){var t,s,n,o;let a={},i={added:[],changed:[],removed:[],all:[],urls:{}};if(r.assets)for(let l=0,h=M(r.assets),f=h.length;l<f;l++){let u=h[l],c=u.originalPath||u.path;a[c]=u,u.url&&((t=e.urls)[s=u.url]||(t[s]=u))}for(let l=0,h=M(e.assets||[]),f=h.length;l<f;l++){let u=h[l],c=u.originalPath||u.path,g=a[c];u.url&&r.urls&&(r.urls[u.url]=u),g?(g.hash!=u.hash&&(g.invalidated=Date.now(),g.replacedBy=u,u.replaces=g,i.changed.push(u),i.all.push(u),g==r.main&&(i.main=u)),n=a[c],delete a[c]):(i.added.push(u),i.all.push(u))}for(let l=0,h=Object.keys(a),f=h.length,u,c;l<f;l++)u=h[l],c=a[u],c.removed=Date.now(),i.all.push(c);for(let l=0,h=M(i.all),f=h.length;l<f;l++){let u=h[l];(i[o=u.type]||(i[o]=[])).push(u)}return i.removed=Object.values(a),e.changes=i,e}var N=d(require("events")),w=d(require("fs")),$=d(require("path"));var z=Symbol.for("#__initor__"),J=Symbol.for("#__inited__"),U=Symbol.for("#__hooks__"),Ie=Symbol.for("#refresh"),W=Symbol.for("#__init__"),O=Symbol.for("#manifest"),V=Symbol.for("#absPath"),j=Symbol.for("#raw"),G=Symbol.for("#watch"),K=Symbol(),Q=class{constructor(e){this[O]=e}get absPath(){return this[V]||(this[V]=this[O].resolve(this))}get name(){return $.default.basename(this.path)}get body(){return this.readSync()}readSync(){return w.default.readFileSync(this.absPath,"utf-8")}pipe(e){return w.default.createReadStream(this.absPath).pipe(e)}toString(){return this.url||this.absPath}},X=class extends N.EventEmitter{static[W](){return this.prototype[z]=K,this}constructor(e={}){var t;super();t=this,this.options=e,this.data={},this.path=e.path,this.refs={},t.reviver=function(s){return new Q(t)},t.init(e.data),this[z]===K&&(this[U]&&this[U].inited(this),this[J]&&this[J]())}get srcdir(){return $.default.resolve($.default.dirname(this.path),this.data.srcdir)}get outdir(){return $.default.resolve($.default.dirname(this.path),this.data.outdir)}get changes(){return this.data.changes||{}}get inputs(){return this.data.inputs}get outputs(){return this.data.outputs}get assets(){return this.data.assets}get urls(){return this.data.urls||{}}get main(){return this.data.main}get cwd(){return process.cwd()}get raw(){return this.data[j]}resolve(e){return e._=="input"?$.default.resolve(this.srcdir||this.cwd,e.path):e._=="output"?$.default.resolve(this.outdir,e.path):$.default.resolve(this.cwd,e.path||e)}resolveAssetPath(e){return $.default.resolve(this.outdir,e)}read(e){return w.default.readFileSync(this.resolve(e),"utf-8")}loadFromFile(e){return w.default.existsSync(e)?w.default.readFileSync(e,"utf-8"):"{}"}init(e=null){return(e||this.path)&&this.update(e),this}update(e){if(e==null&&(this.path?e=this.loadFromFile(this.path):console.warn("cannot update manifest without path")),typeof e=="string"){let t=e;e=E(e,this.reviver),e[j]=t}return this.data=L(this.data||{},e),this.data.changes.all.length&&this.emit("change",this.diff,this),this.data.changes.main&&this.emit("change:main",this.data.main,this),this.data.changes}serializeForBrowser(){return this.data[j]}[Ie](e){return!0}watch(){var e=this;if(this[G]!=!0?(this[G]=!0,!0):!1)return e.path&&!process.env.IMBA_HMR&&w.default.watch(this.path,function(t,s){let n=w.default.existsSync(e.path),o=n&&w.default.statSync(e.path);n&&e.update()})}on(e,t){return this.watch(),super.on(...arguments)}};X[W]();var Y=class{static for(e){return new Proxy({},new this(e))}constructor(e){this.getter=e}get target(){return this.getter()}get(e,t){return this.target[t]}set(e,t,s){return this.target[t]=s,!0}},p=Y.for(function(){return globalThis[O]});var H=d(require("cluster")),v=d(require("fs")),P=d(require("path")),ie=d(require("events"));var F=d(require("perf_hooks")),x=Symbol.for("#spinner"),ot=Symbol.for("#__initor__"),at=Symbol.for("#__inited__"),lt=Symbol.for("#__hooks__"),De=Symbol.for("#ctime"),Z=Symbol.for("#IMBA_OPTIONS"),Ee={reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29],black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},b={bold:function(r){return"[1m"+r+"[22m"},red:function(r){return"[31m"+r+"[39m"},green:function(r){return"[32m"+r+"[39m"},yellow:function(r){return"[33m"+r+"[39m"},blue:function(r){return"[94m"+r+"[39m"},gray:function(r){return"[90m"+r+"[39m"},white:function(r){return"[37m"+r+"[39m"},f:function(r,e){let t=Ee[r];return"["+t[0]+"m"+e+"["+t[1]+"m"}};b.warn=b.yellow;b.error=b.red;var C=process.platform!=="win32"||process.env.CI||process.env.TERM==="xterm-256color",Le={info:b.f("yellowBright",C?"\u2139":"i"),success:b.green(C?"\u2714":"\u221A"),warning:b.yellow(C?"\u26A0":"!!"),error:b.red(C?"\xD7":"\u2716"),debug:b.blue(C?"\u2139":"i")},q=["debug","info","success","warning","error","silent"],Ne={"-1":"socket","4":"ip4","6":"ip6"};function ze(r){let e=b.f;return r=r.replace(/https?\:[^\s\n\)\]]+/g,function(t){return e("blueBright",t)}),r=r.replace(/^[\t\s]*\>[^\n]+/gm,function(t){return e("bold",t)}),r=r.replace(/\t/g,"  "),r=r.replace(/^/gm,"  "),r}function ee(r,...e){let t=b.f;return r=r.replace(/\%([\w\.]+)/g,function(s,n){let o=e.shift();if(n=="markdown")return ze(o);if(n=="kb")return t("dim",(o/1e3).toFixed(1)+"kb");if(n=="path"||n=="bold")return t("bold",o);if(n=="dim")return t("dim",o);if(n=="address"){let a=Ne[o.addressType];return o.port?t("blueBright",[o.address||"http://127.0.0.1",o.port].join(":")):t("blueBright",a)}else{if(n=="ms")return t("yellow",Math.round(o)+"ms");if(n=="d")return t("blueBright",o);if(n=="red")return t("redBright",o);if(n=="green")return t("greenBright",o);if(n=="yellow")return t("yellowBright",o);if(n=="ref")return t("yellowBright","#"+(o.id||o));if(n=="elapsed"){o!=null&&e.unshift(o);let a=F.performance.now();return t("yellow",Math.round(a)+"ms")}else if(n=="heap"){o!=null&&e.unshift(o);let a=process.memoryUsage().heapUsed/1024/1024;return t("yellow",a.toFixed(2)+"mb")}else return o}}),[r,...e]}var te=null,re=null,se=class{static get main(){return re||(re=new this)}constructor({prefix:e=null,loglevel:t}={}){this[De]=Date.now(),this.prefix=e?ee(...e)[0]:"",this.loglevel=t||process.env.IMBA_LOGLEVEL||globalThis[Z]&&globalThis[Z].loglevel||"info"}write(e,...t){if(q.indexOf(e)<q.indexOf(this.loglevel))return this;let s=Le[e]||e,[n,...o]=ee(...t);return this.prefix&&(n=this.prefix+n),this[x]&&this[x].isSpinning?(e=="success"&&(this[x].clear(),console.log(s+" "+n,...o),this[x].frame()),this[x].text=n):console.log(s+" "+n,...o)}debug(...e){return this.write("debug",...e)}log(...e){return this.write("info",...e)}info(...e){return this.write("info",...e)}warn(...e){return this.write("warn",...e)}error(...e){return this.write("error",...e)}success(...e){return this.write("success",...e)}ts(...e){return this.write("debug",...e,F.performance.now())}spinner(){}get[x](){return te}get proxy(){var e=this;let t=function(...s){return e.info(...s)};return t.info=e.info.bind(e),t.warn=e.warn.bind(e),t.error=e.error.bind(e),t.debug=e.debug.bind(e),t.success=e.success.bind(e),t.ts=e.ts.bind(e),t.logger=e,t}async time(e,t){let s=Date.now();if(t){let n=await t();return this.info(""+e+" %ms",Date.now()-s),n}}},ne=new se().proxy;var Je=d(require("module")),oe=d(require("http")),pt=d(require("https")),ae=d(require("http2"));function m(r){let e;return r&&((e=r.toIterable)?e.call(r):r)}var le=Symbol.for("#setup"),ue=Symbol.for("#__initor__"),he=Symbol.for("#__inited__"),fe=Symbol.for("#__hooks__"),pe=Symbol.for("#__init__"),ce=Symbol.for("#setup?"),de=Symbol.for("#watch"),Ue=Symbol.for("#dom"),We=Symbol.for("#server"),Ve=Symbol.for("#raw"),me=Symbol(),k={html:{"Content-Type":"text/html"},js:{"Content-Type":"text/javascript"},mjs:{"Content-Type":"text/javascript"},json:{"Content-Type":"application/json"},css:{"Content-Type":"text/css"},otf:{"Content-Type":"font/otf"},ttf:{"Content-Type":"font/ttf"},woff:{"Content-Type":"font/woff"},woff2:{"Content-Type":"font/woff2"},svg:{"Content-Type":"image/svg+xml"},avif:{"Content-Type":"image/avif"},gif:{"Content-Type":"image/gif"},png:{"Content-Type":"image/png"},apng:{"Content-Type":"image/apng"},webp:{"Content-Type":"image/webp"},jpg:{"Content-Type":"image/jpeg"},jpeg:{"Content-Type":"image/jpeg"},bmp:{"Content-Type":"image/bmp"},webm:{"Content-Type":"video/webm"},weba:{"Content-Type":"audio/webm"},avi:{"Content-Type":"video/x-msvideo"},mp3:{"Content-Type":"audio/mpeg"},mp4:{"Content-Type":"video/mp4"},m4a:{"Content-Type":"audio/m4a"},mpeg:{"Content-Type":"video/mpeg"},wav:{"Content-Type":"audio/wav"},ogg:{"Content-Type":"audio/ogg"},ogv:{"Content-Type":"video/ogg"},oga:{"Content-Type":"audio/ogg"},opus:{"Content-Type":"audio/opus"}},y=globalThis.process,ge=class extends Set{call(e,...t){var s;s=[];for(let n of m(this))s.push(n[e](...t));return s}close(e={}){var t;t=[];for(let s of m(this))t.push(s.close(e));return t}reload(e={}){var t;t=[];for(let s of m(this))t.push(s.reload(e));return t}broadcast(e,...t){var s;s=[];for(let n of m(this))s.push(n.broadcast(e,...t));return s}emit(e,t){var s;s=[];for(let n of m(this))s.push(n.emit(e,t));return s}},S=new ge,_e=new(class extends ie.EventEmitter{static[pe](){return this.prototype[ue]=me,this}constructor(){var e;super(...arguments);e=this,this.autoreload=!1,this.state={},H.default.isWorker&&y.on("message",function(t){if(e.emit("message",t),t[0]=="emit")return e.emit(...t.slice(1))}),this[ue]===me&&(this[fe]&&this[fe].inited(this),this[he]&&this[he]())}[le](){var e=this;if(!!(this[ce]!=!0?(this[ce]=!0,!0):!1))return e.on("reloading",function(t){var s;console.log("is reloading - from outside"),e.state.reloading=!0,s=[];for(let n of m(S))s.push(n.pause());return s}),e.on("reloaded",async function(t){var s;e.state.reloaded=!0,console.log("is reloaded - from outside"),s=[];for(let o of m(S))s.push(o.close());let n=s;return setTimeout(function(){return y.exit(0)},100),await Promise.all(n),y.exit(0)}),e.on("manifest:change",function(t){if(y.env.IMBA_HMR)return p.update(t)}),e.on("manifest:error",function(t){if(y.env.IMBA_HMR)return p.errors=t,S.broadcast("errors",p.errors)}),!0}send(e){if(y.send instanceof Function)return y.send(e)}on(e,t){return e=="change"&&this.watch(),super.on(...arguments)}watch(){var e=this;if(this[de]!=!0?(this[de]=!0,!0):!1)return p.on("change:main",function(){return e.emit("change",p)})}reload(){if(!(this.isReloading!=!0?(this.isReloading=!0,!0):!1))return this;if(this.state.reloading=!0,!y.env.IMBA_SERVE){console.warn("not possible to gracefully reload servers not started via imba start");return}this.send("reload")}}[pe]()),be=class{constructor(e,t={}){this.url=e,[this.path,this.query]=e.split("?"),this.ext=P.default.extname(this.path),this.headers={"Content-Type":"text/plain","Access-Control-Allow-Origin":"*","cache-control":"public"},Object.assign(this.headers,k[this.ext.slice(1)]||{})}respond(e,t){let s=p.urls[this.url],n=this.headers,o=s?p.resolve(s):p.resolveAssetPath("public"+this.path);if(!o)return console.log("found no path for",s,this.url),t.writeHead(404,{}),t.end();if(s&&(s.ttl>0&&(n["cache-control"]="max-age="+s.ttl),s.imports)){let a=[];for(let i=0,l=m(s.imports),h=l.length;i<h;i++){let f=l[i];a.push("<"+f.url+">; rel=modulepreload; as=script")}n.Link=a.join(", ")}return v.default.access(o,v.default.constants.R_OK,function(a){if(a)return console.log("could not find path",o),t.writeHead(404,{}),t.end();try{let i=v.default.createReadStream(o);return t.writeHead(200,n),i.pipe(t)}catch(i){return t.writeHead(503,{}),t.end()}})}createReadStream(){return v.default.createReadStream(this.path)}pipe(e){return this.createReadStream().pipe(e)}},ye=class{static wrap(e,t={}){return new this(e,t)}constructor(e,t){var s=this;S.add(this),this.id=Math.random(),this.options=t,this.closed=!1,this.paused=!1,this.server=e,this.clients=new Set,this.stalledResponses=[],this.assetResponders={},y.env.IMBA_PATH&&(this.devtoolsPath=P.default.resolve(y.env.IMBA_PATH,"dist","hmr.js")),this.scheme=e instanceof oe.default.Server?"http":"https";let n=this.server._events.request,o=globalThis[Ue];e.off("request",n),n[We]=this,e.on("listening",function(){let a=s.server.address(),i=a.address;(i=="::"||i=="0.0.0.0")&&(i="localhost");let l=""+s.scheme+"://"+i+":"+a.port+"/";return ne.info("listening on %bold",l)}),p.on("change",function(a,i){return s.broadcast("manifest",i.data[Ve])}),s.handler=function(a,i){var l;let h=a instanceof ae.Http2ServerRequest,f=a.url,u="/__assets__/";if(s.paused||s.closed)return i.statusCode=302,i.setHeader("Location",a.url),h||i.setHeader("Connection","close"),s.closed?(h&&a.stream.session.close(),i.end()):s.stalledResponses.push(i);if(f=="/__hmr__.js"&&s.devtoolsPath){let _=v.default.createReadStream(s.devtoolsPath);return i.writeHead(200,k.js),_.pipe(i)}if(f=="/__hmr__"){let _={"Content-Type":"text/event-stream","Cache-Control":"no-cache"};return h||(_.Connection="keep-alive"),i.writeHead(200,_),s.clients.add(i),s.broadcast("init",p.serializeForBrowser(),[i]),a.on("close",function(){return s.clients.delete(i)}),!0}if(f.indexOf(u)==0||p.urls[f])return((l=s.assetResponders)[f]||(l[f]=new be(f,s))).respond(a,i);let c=a.headers,g;if(h?g=c[":scheme"]+"://"+c[":authority"]:g=(a.connection.encrypted?"https":"http")+"://"+c.host,t.static){let _=new URL(f,g),Be=P.default.extname(_.pathname),A=k[Be.slice(1)];if(A){let I=P.default.resolve(p.cwd,"."+_.pathname);if(v.default.existsSync(I)){v.default.readFile(I,function(D,Re){return D?(i.writeHead(500,{}),i.write("Error getting the file: "+D)):(i.writeHead(200,A),i.end(Re))});return}}}if(o){let _=new o.Location(a.url,g);return o.Document.create({location:_},function(){return n(a,i)})}else return n(a,i)},e.on("request",s.handler),e.on("close",function(){return console.log("server is closing!!!")}),H.default.isWorker&&(_e[le](),_e.send("serve"))}broadcast(e,t={},s=this.clients){t=JSON.stringify(t);let n="data: "+t+`


`;for(let o of m(s))o.write("event: "+e+`
`),o.write(`id: imba
`),o.write(n);return this}pause(){return(this.paused!=!0?(this.paused=!0,!0):!1)&&this.broadcast("paused"),this}resume(){if(this.paused!=!1?(this.paused=!1,!0):!1)return this.broadcast("resumed"),this.flushStalledResponses()}flushStalledResponses(){for(let e=0,t=m(this.stalledResponses),s=t.length;e<s;e++)t[e].end();return this.stalledResponses=[]}close(){var e=this;return this.pause(),new Promise(function(t){return e.closed=!0,e.server.close(t),e.flushStalledResponses()})}};function $e(r,...e){return ye.wrap(r,...e)}var _t=Symbol.for("#__initor__"),bt=Symbol.for("#__inited__"),yt=Symbol.for("#__hooks__"),we=Symbol.for("#__init__"),Ge=Symbol.for("#__patch__"),ve=Symbol.for("#warned"),T=Symbol.for("#asset"),B=class{static wrap(e){let t=new B(e);return new Proxy(t,t)}constructor(e){this.meta=e}get input(){return p.inputs[this.meta.input]}get asset(){return globalThis._MF_?this.meta:this.input?this.input.asset:null}set(e,t,s){return!0}get(e,t){return this.meta.meta&&this.meta.meta[t]!=null?this.meta.meta[t]:this.asset?t=="absPath"&&!this.asset.absPath?this.asset.url:this.asset[t]:((this.meta[ve]!=!0?(this.meta[ve]=!0,!0):!1)&&console.warn("Asset for '"+this.meta.input+"' not found"),t=="valueOf"?function(){return""}:null)}},xe=class{[Ge](e={}){var t;(t=e.url)!==void 0&&(this.url=t),(t=e.meta)!==void 0&&(this.meta=t)}constructor(e=null){this[we](e)}[we](e=null,t=!0){this.url=e?e.url:void 0,this.meta=e?e.meta:void 0}adoptNode(e){var t;if((t=this.meta)==null?void 0:t.content){for(let s=this.meta.attributes,n=0,o=Object.keys(s),a=o.length,i,l;n<a;n++)i=o[n],l=s[i],e.setAttribute(i,l);e.innerHTML=this.meta.content}return this}toString(){return this.url}toStyleString(){return"url("+this.url+")"}};function Se(r){var e,t;if(r[T])return r[T];if(r.type=="svg")return r[T]||(r[T]=new xe(r));if(r.input){let s=globalThis._MF_&&globalThis._MF_[r.input];return s&&(Object.assign(r,s),r.toString=function(){return this.absPath}),r[T]||(r[T]=B.wrap(r))}return r}var Ce=d(require("express"));var Te=Se({input:"entry:app/index.html"});var Pe=(0,Ce.default)();Pe.get(/.*/,function(r,e){return r.accepts(["image/*","html"])!="html"?e.sendStatus(404):e.send(Te.body)});$e(Pe.listen(process.env.PORT||3e3));
//__FOOT__
//# sourceMappingURL=data:application/json;base64,
